{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-snippets-reactive/add-snippets-reactive.component.css","webpack:///./src/app/add-snippets-reactive/add-snippets-reactive.component.html","webpack:///./src/app/add-snippets-reactive/add-snippets-reactive.component.ts","webpack:///./src/app/add-snippets/add-snippets.component.css","webpack:///./src/app/add-snippets/add-snippets.component.html","webpack:///./src/app/add-snippets/add-snippets.component.ts","webpack:///./src/app/app-footer/app-footer.component.css","webpack:///./src/app/app-footer/app-footer.component.html","webpack:///./src/app/app-footer/app-footer.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list-snippets/list-snippets.component.html","webpack:///./src/app/list-snippets/list-snippets.component.ts","webpack:///./src/app/list-snippets/snippets.services.ts","webpack:///./src/app/text-color.directive.ts","webpack:///./src/app/view-snippets/view-snippet.resolver.ts","webpack:///./src/app/view-snippets/view-snippets.component.html","webpack:///./src/app/view-snippets/view-snippets.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"input.ng-invalid {\\n  border: 1px solid red;\\n}\\n\"","module.exports = \"<form [formGroup]=\\\"snippetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Name</label><input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Language</label><select class=\\\"form-control\\\" formControlName=\\\"language\\\">\\n        <option *ngFor=\\\"let option of languageList\\\" [ngValue]=\\\"option.language\\\">{{option.language}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Code</label><input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"code\\\">\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Add Snippet</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { AvailableLanguages, CodeSnippets } from '../list-snippets/list-snippets.component';\nimport { SnippetsServices } from '../list-snippets/snippets.services';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-snippet-reactive',\n  templateUrl: './add-snippets-reactive.component.html',\n  styleUrls: ['./add-snippets-reactive.component.css']\n})\n\nexport class AddSnippetsReactiveComponent implements OnInit {\n\n  snippetForm: FormGroup;\n  languageList: AvailableLanguages[];\n  forbiddenNames: string[] = ['Kutta', 'Kamina'];\n  @Output()\n  newSnippetAdded: EventEmitter<CodeSnippets> = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private snippetsService: SnippetsServices, private activeRoute: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.snippetsService.getLanguageDropdown().subscribe((data: AvailableLanguages[]) => {\n      this.languageList = data;\n    });\n    this.snippetForm = new FormGroup({\n      name: new FormControl('', this.nameValidator.bind(this)),\n      language: new FormControl(''),\n      code: new FormControl('')\n    });\n  }\n\n  onSubmit() {\n    console.log(this.snippetForm.valid);\n    this.snippetsService.saveSnippet(this.snippetForm.value).subscribe(data => {\n      console.log(data);\n      this.newSnippetAdded.emit(data);\n    });\n  }\n\n  nameValidator(control: FormControl): {[s: string]: boolean}{\n    if (this.forbiddenNames.indexOf(control.value) !== -1) {\n      return {'forbidden name': true};\n    } else {\n      return null;\n    }\n  }\n\n}\n","module.exports = \"input.ng-invalid {\\n  border: 1px solid red;\\n}\\n\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit(formData)\\\" #formData=\\\"ngForm\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Name</label><input class=\\\"form-control\\\" type=\\\"text\\\" ngModel name=\\\"name\\\" required>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Language</label><select class=\\\"form-control\\\" ngModel name=\\\"language\\\">\\n        <option *ngFor=\\\"let option of languageList\\\" [ngValue]=\\\"option.language\\\">{{option.language}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <label>Code</label><input class=\\\"form-control\\\" type=\\\"text\\\" ngModel name=\\\"code\\\">\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Add Snippet</button>\\n  </div>\\n</form>\\n\"","import { Component, EventEmitter, Output, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { CodeSnippets, AvailableLanguages } from '../list-snippets/list-snippets.component';\nimport { SnippetsServices } from '../list-snippets/snippets.services';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-add-snippet',\n  templateUrl: './add-snippets.component.html',\n  styleUrls: ['./add-snippets.component.css']\n})\n\nexport class AddSnippetsComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Output()\n  newSnippetAdded: EventEmitter<CodeSnippets> = new EventEmitter();\n\n  name: string;\n  language: string;\n  code: string;\n  languageList: AvailableLanguages[];\n\n  constructor(private snippetsService: SnippetsServices, private route: Router) {\n    console.log('Add Const Initialized');\n   }\n\n  saveSnippets() {\n    const newSnippet: CodeSnippets = {\n      'id': null,\n      'name': this.name,\n      'language': this.language,\n      'code': this.code\n    };\n    console.log(newSnippet);\n    this.snippetsService.saveSnippet(newSnippet);\n    this.newSnippetAdded.emit(newSnippet);\n  }\n\n  ngOnInit() {\n    this.snippetsService.getLanguageDropdown().subscribe((data: AvailableLanguages[]) => {\n      this.languageList = data;\n    });\n    console.log('Inside Add Snippet Init');\n  }\n\n  ngOnChanges() {\n    console.log('Inside Add Snippet On Changes');\n  }\n\n  ngOnDestroy() {\n    console.log('Inside Add Snippet On Destroy');\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n    const newSnippet: CodeSnippets = {\n      'id': null,\n      'name': form.value.name,\n      'language': form.value.language,\n      'code': form.value.code\n    };\n    console.log(newSnippet);\n    this.snippetsService.saveSnippet(newSnippet).subscribe(data => {\n      this.newSnippetAdded.emit(data);\n    });\n  }\n}\n","module.exports = \".bg-4 {\\n    background-color: #2f2f2f;\\n    color: #ffffff;\\n}\\n\"","module.exports = \"<footer class=\\\"container-fluid bg-4 text-center\\\">\\n  <p>© 2018 Copyright Swastik</p>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './app-footer.component.html',\n  styleUrls: ['./app-footer.component.css']\n})\nexport class AppFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddSnippetsComponent } from './add-snippets/add-snippets.component';\nimport { ViewComponent } from './view-snippets/view-snippets.component';\nimport { ViewSnippetResolver } from './view-snippets/view-snippet.resolver';\n\nconst routes: Routes = [\n  {path: 'addSnippet', component: AddSnippetsComponent},\n  {path: 'viewSnippet/:id', component: ViewComponent, resolve: {\n    viewres: ViewSnippetResolver\n  }}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule],\n  declarations: [],\n  providers: [ViewSnippetResolver],\n})\nexport class AppRouting {\n}\n","module.exports = \"\"","module.exports = \"<app-snippet-list></app-snippet-list>\\n<div class=\\\"col-lg-12\\\">\\n  <app-footer></app-footer>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, Component } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ListSnippetsComponent } from './list-snippets/list-snippets.component';\nimport { AddSnippetsComponent } from './add-snippets/add-snippets.component';\nimport { ViewComponent } from './view-snippets/view-snippets.component';\nimport { HttpModule } from '@angular/http';\nimport { SnippetsServices } from './list-snippets/snippets.services';\nimport { AppRouting } from './app-routing.module';\nimport { ColorDirective } from './text-color.directive';\nimport { AppFooterComponent } from './app-footer/app-footer.component';\nimport { AddSnippetsReactiveComponent } from './add-snippets-reactive/add-snippets-reactive.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListSnippetsComponent,\n    AddSnippetsComponent,\n    ViewComponent,\n    ColorDirective,\n    AppFooterComponent,\n    AddSnippetsReactiveComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    AppRouting,\n    NgSelectModule\n  ],\n  providers: [SnippetsServices],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1>List Of Snippets</h1>\\n<ng-select [items]=\\\"listOfSnippets\\\"\\n           bindLabel=\\\"name\\\"\\n           bindValue=\\\"id\\\"\\n           [(ngModel)]=\\\"filteredSnippet\\\" (change)=\\\"search()\\\">\\n</ng-select>\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>ID</th>\\n      <th>Name</th>\\n      <th>Language</th>\\n      <th>Code</th>\\n      <th>Action</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of listOfSnippets\\\">\\n      <th>{{ item.id }}</th>\\n      <th>{{ item.name }}</th>\\n      <th>{{ item.language }}</th>\\n      <th appColor>{{ item.code }}</th>\\n      <th>\\n        <span class=\\\"glyphicon glyphicon-pencil\\\" [routerLink]=\\\"['/viewSnippet', item.id]\\\"></span>\\n      </th>\\n    </tr>\\n  </tbody>\\n</table>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"test()\\\">Test</button>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"showAddToggle()\\\">{{showAdd ? 'Cancel':'Create'}}</button>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"showAddReactiveToggle()\\\">{{showAddReactive ? 'Cancel':'Create Reactive'}}</button>\\n<div *ngIf='showAdd'>\\n  <app-add-snippet (newSnippetAdded)='updateSnippet($event)'></app-add-snippet>\\n</div>\\n<div *ngIf='showAddReactive'>\\n  <app-add-snippet-reactive (newSnippetAdded)='updateSnippet($event)'></app-add-snippet-reactive>\\n</div>\\n<router-outlet (deleteSnippetEvent)='delete($event)'></router-outlet>\\n\"","import { Component, ViewEncapsulation, OnInit, OnChanges, OnDestroy, DoCheck, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { SnippetsServices } from './snippets.services';\nimport { timeInterval } from 'rxjs/operators';\nimport { AddSnippetsComponent } from '../add-snippets/add-snippets.component';\nimport { Subscription } from 'rxjs';\n\nexport interface CodeSnippets {\n  id: number;\n  name: string;\n  language: string;\n  code: string;\n}\n\nexport interface AvailableLanguages {\n  id: number;\n  language: string;\n}\n\n@Component({\n  selector: 'app-snippet-list',\n  templateUrl: 'list-snippets.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListSnippetsComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n\n  listOfSnippets: CodeSnippets[] = [];\n  selectedSnippet: CodeSnippets;\n  showAdd = false;\n  showUpdate = false;\n  private codeSnippetSubscription: Subscription;\n  showAddReactive = false;\n  people : string[];\n  filteredSnippet;\n  @ViewChild(AddSnippetsComponent) addInfo;\n\n  constructor(private snippetsService: SnippetsServices, private changeRef: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n    this.snippetsService.getSnippets();\n    this.codeSnippetSubscription = this.snippetsService.getSnippetUpdateListener().subscribe((data: CodeSnippets[]) => {\n      this.listOfSnippets = data;\n    });\n    console.log(this.addInfo.name + 'update');\n    this.people = ['Souj', 'Swas', 'Shan', 'Jyo'];\n  }\n\n  addSnippetEventHandler(event: CodeSnippets) {\n    this.listOfSnippets.push(event);\n  }\n\n  showSnippet(snippet: CodeSnippets) {\n    this.showAdd = false;\n    this.showUpdate = true;\n    console.log('SSS');\n    console.log(snippet.name);\n    this.selectedSnippet = snippet;\n  }\n\n  showAddToggle() {\n    console.log('Inside show add' + this.showAdd);\n    this.showAdd = !this.showAdd;\n  }\n\n  deleteSnippetEventHandler(event: CodeSnippets) {\n    console.log('Delete Handler');\n    this.listOfSnippets.splice(this.listOfSnippets.indexOf(event), 1);\n  }\n\n  ngOnChanges() {\n    console.log('List Snippet On Changes');\n  }\n\n  ngOnDestroy() {\n    console.log('List Snippet On Destroy');\n  }\n\n  ngDoCheck() {\n  }\n\n  updateSnippet(newSnippet: CodeSnippets) {\n    this.listOfSnippets.push(newSnippet);\n  }\n\n  test() {\n    console.log('test');\n    this.snippetsService.testParameter();\n  }\n\n  delete(event) {\n    console.log('Delete Called');\n  }\n\n  showAddReactiveToggle() {\n    this.showAddReactive = !this.showAddReactive;\n  }\n\n  search() {\n    if (this.filteredSnippet !== undefined) {\n      this.listOfSnippets = this.listOfSnippets.filter(snippet =>\n        this.filteredSnippet === snippet.id\n      );\n    }\n  }\n}\n","import {Http, Headers, RequestOptions} from '@angular/http';\nimport {Injectable, EventEmitter} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {log} from 'util';\nimport { CodeSnippets, AvailableLanguages } from './list-snippets.component';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class SnippetsServices  {\n\neventEmitter: EventEmitter<CodeSnippets[]> = new EventEmitter();\n\n  private codeSnippets: CodeSnippets[] = [];\n  private codeUpdated = new Subject<CodeSnippets[]>();\n\n  constructor(private http: HttpClient, ) {\n\n   }\n\ngetSnippets() {\n  this.http.get<CodeSnippets[]>('snippets/allsnippets').subscribe((data) => {\n    this.codeSnippets = data;\n    this.codeUpdated.next([...this.codeSnippets]);\n  });\n}\n\ngetSnippetUpdateListener() {\n  return this.codeUpdated.asObservable();\n}\n\nsaveSnippet(codeSnippets: CodeSnippets): Observable<any> {\n  console.log('Inside Save Snippet');\n  const headers = new Headers({ 'Content-Type': 'application/json' });\n  const options = new RequestOptions({headers: headers });\n  return this.http.post('snippets/savesnippet', codeSnippets);\n}\n\n\ndeleteSnippet(id: number) {\n  console.log('ID to be deleted' + id);\n  const headers = new Headers({ 'Content-Type': 'application/json' });\n  const options = new RequestOptions({headers: headers });\n  this.http.delete('snippets/deletesnippet/' + id).subscribe((data) => {\n    console.log(data);\n  }, (error) => console.log(error), () => console.log('delete complete'));\n}\n\ngetSnippetById(id: number): Observable<CodeSnippets> {\n  const headers = new Headers({ 'Content-Type': 'application/json' });\n  const options = new RequestOptions({headers: headers });\n  return this.http.get<CodeSnippets>('snippets/getsnippet/' + id);\n}\n\ntestParameter() {\n  const params = new HttpParams({\n    fromObject: {\n      first_name: 'ss',\n      last_name: 'pp'\n    }\n  });\n\n  this.http.post('snippets/testpost', params).subscribe((data) => console.log(data), (err) => console.log(err));\n}\n\ngetLanguageDropdown() {\n  return this.http.get('snippets/getSupportedLanguages');\n}\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({ selector: '[appColor]' })\nexport class ColorDirective {\n  constructor(elementRef: ElementRef) {\n    elementRef.nativeElement.style.color = 'red';\n    elementRef.nativeElement.style.backgroundColor = 'orange';\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { SnippetsServices } from '../list-snippets/snippets.services';\n\n@Injectable()\nexport class ViewSnippetResolver implements Resolve<any> {\n  constructor(private snippetService: SnippetsServices) {\n   }\n\n   resolve(route: ActivatedRouteSnapshot, rstate: RouterStateSnapshot) {\n    console.log('Route Resolver Called');\n    return this.snippetService.getSnippetById(route.params['id']);\n   }\n}\n","module.exports = \"<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"col-lg-3\\\">\\n    <label>Name</label><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"currentSnippet.name\\\">\\n  </div>\\n  <div class=\\\"col-lg-3\\\">\\n    <label>Language</label><select class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"currentSnippet.language\\\">\\n        <option *ngFor=\\\"let option of languageList\\\" [ngValue]=\\\"option.language\\\">{{option.language}}</option>\\n    </select>\\n  </div>\\n  <div class=\\\"col-lg-3\\\">\\n    <label appColor>Code</label><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"currentSnippet.code\\\">\\n  </div>\\n  <div class=\\\"col-lg-3\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"updateSnippets()\\\">Update Snippet</button>\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteSnippets()\\\">Delete Snippet</button>\\n  </div>\\n</div>\\n\"","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { CodeSnippets, AvailableLanguages } from '../list-snippets/list-snippets.component';\nimport { SnippetsServices } from '../list-snippets/snippets.services';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-view-snippets',\n  templateUrl: './view-snippets.component.html'\n})\nexport class ViewComponent implements OnInit {\n\n  @Output()\n  deleteSnippetEvent: EventEmitter<CodeSnippets> = new EventEmitter();\n  languageList: AvailableLanguages[];\n  currentSnippet: CodeSnippets = {id: 0, name: '', language: '', code: ''};\n\n  constructor(private snippetsService: SnippetsServices, private activatedRoute: ActivatedRoute, private route: Router) {\n    /*const productId = this.activatedRoute.snapshot.params['id'];\n    this.snippetsService.getSnippetById(productId).subscribe(\n      (data: CodeSnippets) => {\n        this.currentSnippet = data;\n      }\n    );*/\n    this.activatedRoute.data.pipe(map(data => data.viewres)).subscribe(\n      (data: CodeSnippets) => {\n      this.currentSnippet = data;\n    }\n\n  );\n   }\n\n  ngOnInit() {\n    this.snippetsService.getLanguageDropdown().subscribe((data: AvailableLanguages[]) => {\n      this.languageList = data;\n    });\n  }\n  updateSnippets() {\n    console.log('updateSnippets');\n    this.snippetsService.saveSnippet(this.currentSnippet);\n    this.route.navigate(['/']);\n  }\n\n  deleteSnippets() {\n    this.snippetsService.deleteSnippet(this.currentSnippet.id);\n    this.deleteSnippetEvent.emit();\n    this.route.navigate(['/']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}